#!/usr/bin/env python3
# -*- coding: latin-1 -*-

import sys
from math import *

def binomiale(a, b):
    res = (factorial(a) / (factorial(b) * factorial(a-b))) * pow(1/6, b) * pow(5/6, a-b)
    return (res)

def calcProbabilite(c, nb):
    res = 0        
    NbOccurence = nbList.count(int(nb))
    if NbOccurence >= c:
        res = 1        
    else:
        for x in range(c - NbOccurence, 5 - NbOccurence + 1):
            res += binomiale(5 - NbOccurence, x)
    return res


def affichageResultat(str, nb,  res):
    print("probabilité d'obtenir un " + str + " de " + nb + " : %0.2f%%" % (res * 100))

def param_game():
# gérer le full (full_3_2 donc brelan de 3 et paire de 2)
    if (list[0] == "yams"):
        _yams();
    elif (list[0] == "suite"):
        _suite();
    elif (list[0] == "full"):
        _full();
    elif (list[0] == "carre"):
        _carre();
    elif (list[0] == "brelan"):
        _brelan();
    else:
        _paire();
    return

def _yams():
    affichageResultat("yams", list[1], calcProbabilite(5, list[1]))
    return

def _suite():
    print("suite")
    return

def _full():
    try:
        tmp = int(list[2])
        if (tmp < 0 or tmp > 6):
            sys.exit("Le full doit etre ecrit ainsi : full_Nombre_Nombre avec deux nombres compris entre 0 et 6.")        
    except:
        sys.exit("Le full doit etre ecrit ainsi : full_Nombre_Nombre avec deux nombres compris entre 0 et 6.")        
    print("full")
    return

def _carre():
    affichageResultat("carre", list[1], calcProbabilite(4, list[1]))
    return

def _brelan():
    affichageResultat("brelan", list[1], calcProbabilite(3, list[1]))
    return

def _paire():
    affichageResultat("paire", list[1], calcProbabilite(2, list[1]))
    return

if (len(sys.argv) != 7):
    print ("Les arguments doivent être les 5 faces des dés du lancé précédent suivi de la combinaison souhaitée.")
    print("Si c'est votre premier lancé, mettez tous les arguments à 0.")
    sys.exit("Nombre d'arguments invalides.")

a = 0;
if (sys.argv[1] == "0"): 
        a += 1
if (sys.argv[2] == "0"): 
        a += 1
if (sys.argv[3] == "0"): 
        a += 1
if (sys.argv[4] == "0"): 
        a += 1
if (sys.argv[5] == "0"): 
        a += 1
if (a > 0 and a != 5):
    print("Si c'est votre premier lancé, mettez tous les arguments à 0. Sinon, mettez la face des dés du lancé précédent.")
    sys.exit("Mauvaise initialisation des dés.")

nbList = list()


dice_1 = sys.argv[1]
try:
    dice_1 = int(dice_1)
    nbList.append(dice_1)
except:
    print("Le premier argument doit etre un nombre sans virgule compris entre 0 et 6.")
    sys.exit()
if (dice_1 < 0 or dice_1 > 6):
    sys.exit("Le premier argument doit etre superieur a 0 et inferieur ou egal a 6.")

dice_2 = sys.argv[2]
try:
    dice_2 = int(dice_2)
    nbList.append(dice_2)
except:
    print("Le deuxieme argument doit etre un nombre sans virgule compris entre 0 et 6.")
    sys.exit()
if (dice_2 < 0 or dice_2 > 6):
    sys.exit("Le deuxieme argument doit etre superieur a 0 et inferieur ou egal a 6.")

dice_3 = sys.argv[3]
try:
    dice_3 = int(dice_3)
    nbList.append(dice_3)
except:
    print("Le troisieme argument doit etre un nombre sans virgule compris entre 0 et 6.")
    sys.exit()

if (dice_3 < 0 or dice_3 > 6):
    sys.exit("Le troisieme argument doit etre superieur a 0 et inferieur ou egal a 6.")

dice_4 = sys.argv[4]
try:
    dice_4 = int(dice_4)
    nbList.append(dice_4)
except:
    print("Le quatrieme argument doit etre un nombre sans virgule compris entre 0 et 6.")
    sys.exit()
if (dice_4 < 0 or dice_4 > 6):
    sys.exit("Le quatrieme argument doit etre superieur a 0 et inferieur ou egal a 6.")

dice_5 = sys.argv[5]
try:
    dice_5 = int(dice_5)
    nbList.append(dice_5)
except:
    print("Le cinquieme argument doit etre un nombre sans virgule compris entre 0 et 6.")
    sys.exit()
if (dice_5 < 0 or dice_5 > 6):
    sys.exit("Le cinquieme argument doit etre superieur a 0 et inferieur ou egal a 6.")

combination = sys.argv[6]
list = [];
list = combination.split('_');
try:
    dice_choice = int(list[1])
    if (dice_choice < 0 or dice_choice > 6):
        sys.exit("Le sixieme argument doit etre ecrit ainsi : nomDeLaCombinaison_Nombre avec un nombre compris entre 0 et 6.")
except:
    print("Le sixieme argument doit etre ecrit ainsi : nomDeLaCombinaison_Nombre avec un nombre compris entre 0 et 6.")
    sys.exit()
if (list[0] == "yams" or list[0] == "suite" or list[0] == "full" or list[0] == "carre" or list[0] == "brelan" or list[0] == "paire"):
    param_game();
else:
    print("Le sixieme argument doit etre ecrit ainsi : nomDeLaCombinaison_Nombre")
    sys.exit()
